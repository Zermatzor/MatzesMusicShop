@model MatzesMusicShop.ViewModels.DetailViewModel

<link href="~/Content/Details.css" rel="stylesheet" />
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<hr />
<h2>@Html.DisplayFor(model => model.AddToCartViewModel.CD.Artist) - @Html.DisplayFor(model => model.AddToCartViewModel.CD.Album)</h2>
<hr />
<div>
    <table>
        <tr>
            <td>
                <img src=@Html.DisplayFor(model => model.AddToCartViewModel.CD.PictureUrl) width="200" height="200" />
            </td>
            <td class="desription">
                @Html.DisplayFor(model => model.AddToCartViewModel.CD.Beschreibung)
            </td>
        </tr>
    </table>
</div>
<hr />
<h4>Einzelpreis: @Html.DisplayFor(model => model.AddToCartViewModel.CD.Price) €</h4>
<hr />
@Html.Partial("_AddToCartModal", Model.AddToCartViewModel)
<br />
@Html.ActionLink("Back to List", "Index")
<hr />
<div>
    <button type="button" id="showCommentForm" class="btn btn-info btn-lg">
        <i class="glyphicon glyphicon-chevron-down"></i> Neuer Kommentar
    </button>
</div>
<div id="commentFormDiv" hidden>
    @Html.Partial("../Comments/_CommentForm", Model.CommentViewModel)
</div>
<hr />
<div id="comments">
</div>

@section Scripts {
    <script>
        // Start-Intervall für die Polling-Funktion
        var interval = 1000; 

        // default parameters
        var obj = {};        

        // Daten für den Abgleich, ob die Kommentarliste erneuert werden muss
        var tempData = {}; 

        // Flag, ob die Kommentar-Eingabe sichtbar ist
        var commentExpanded = false;

        // Startet die Timer-Funktion
        window.setInterval(poll, interval);

        // Timerfunktion
        // Updated im 10-Sekunden-Intervall die Kommentarliste, wenn diese sich geändert hat.
        function poll() {
            interval = 10000;
            $.ajax({
                url: "/Comments/CommentList",
                type: "GET",
                data: obj,
                success: function (data) {
                    if (data != tempData) {         // Wenn die Daten sich unterscheiden
                        tempData = data; // wird die neue Liste für den nächsten Abgleich gespeichert
                        $("#comments").html(data);  // danach werden die Daten in die comment-div geladen
                    }
                }
            });
        }

        // Button-Click für das Einblenden der Kommentar-Form
        $("#showCommentForm").click(function () {
            expandCommentForm(!commentExpanded);
        });

        // Form-Submit für die Kommentar-Eingabe
        $("#CommentForm").submit(function (e) {
            e.preventDefault(); // verhindert den default Form-Submit

            var form = $(this);
            var url = "/Comments/CommentForm";
            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),         // Serialisiert die Eingabe-elemente der Form.
                success: function (data) {
                    expandCommentForm(false);   // Klappt die Kommentar-Form wieder ein.
                }
            });
        });

        // Klappt die Kommentar-Form auf wenn "expand == true"
        // und zu wenn "expand == false"
        // Setzt zusätzlich das Icon des Buttons anhand des Klapp-Zustands
        function expandCommentForm(expand) {
            if (expand) {   // Button-Pfeil nach oben
                $("#showCommentForm i").removeClass("glyphicon glyphicon-chevron-down");
                $("#showCommentForm i").addClass("glyphicon glyphicon-chevron-up");
                $("#commentFormDiv").show();
                commentExpanded = true;
            }
            else {          // Button-Pfeil nach unten
                $("#showCommentForm i").removeClass("glyphicon glyphicon-chevron-up");
                $("#showCommentForm i").addClass("glyphicon glyphicon-chevron-down");
                $("#commentFormDiv").hide();
                commentExpanded = false;
            }
        };

        // Form-Submit für den Modalen Warenkorb-Dialog
        $("#AddToCartForm").submit(function (e) {
            e.preventDefault(); // verhindert den default Form-Submit

            var form = $(this); 
            var url = form.attr('action');

            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),     // Serialisiert die Eingabe-elemente der Form.
                success: function (data) {
                    // Beim erfolgreichen POST wird im Anschluss die Mitteilung in dem gleichen Dialog
                    // in Form eines Div-Austausches angezeigt. 
                    $("#addToCartControls").hide();
                    $("#addToCartMessage").show();
                }
            });
        });

        // Wenn der modale Dialog geschlossen wird (ob man daneben klickt oder den Button betätigt ist egal),
        // Wird der Div-Bereich mit den Steuerelementen wieder in der Form aktiviert (Für den nächsten Start).
        $('#myModal').on('hidden.bs.modal', function () {
            $("#addToCartControls").show();
            $("#addToCartMessage").hide();
        });

        // Button-Event für die Bestätigung des Erfolgs-Message-Dialogs.
        // Seitenwechsel zur Produktliste.
        $("#msgButton").click(function () {
            window.location = "http://localhost:57958/CDs";
        });
    </script>
}


